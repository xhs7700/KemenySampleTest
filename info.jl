using GeneralGraphs
using GraphDatasets

# $\left(3^{g+1} + 3\right) / 2$ and $3^{g+1}$
# loadPseudofractal 15

# $3\times 2^{g-2}$ and $3\times 2^{g-2} - 1$
# load3CayleyTree 23

# $4\times 3^{g-1}$ and $2\times 3^g$
# loadHanoiExt 15

# $\frac{2}{q+3}\left(\frac{(q+1)(q+2)}{2}\right)^{g+1} + \frac{2q+4}{q+3}$ and $\left(\frac{(q+1)(q+2)}{2}\right)^{g+1}$
# loadCorona3 7

# $2\times 3^g+2$ and $6\times 3^g$
# loadApollo 15

# [(6, 9), (15, 27), (42, 81), (123, 243), (366, 729), (1095, 2187), (3282, 6561), (9843, 19683), (29526, 59049), (88575, 177147), (265722, 531441), (797163, 1594323), (2391486, 4782969), (7174455, 14348907), (21523362, 43046721)]
size_pseudo = [((3^(g + 1) + 3) รท 2, 3^(g + 1)) for g in 1:15]

# [(4, 3), (10, 9), (22, 21), (46, 45), (94, 93), (190, 189), (382, 381), (766, 765), (1534, 1533), (3070, 3069), (6142, 6141), (12286, 12285), (24574, 24573), (49150, 49149), (98302, 98301), (196606, 196605), (393214, 393213), (786430, 786429), (1572862, 1572861), (3145726, 3145725), (6291454, 6291453), (12582910, 12582909), (25165822, 25165821)]
size_3cayley = [(3 * 2^g - 2, 3 * 2^g - 3) for g in 1:23]

# [(4, 6), (12, 18), (36, 54), (108, 162), (324, 486), (972, 1458), (2916, 4374), (8748, 13122), (26244, 39366), (78732, 118098), (236196, 354294), (708588, 1062882), (2125764, 3188646), (6377292, 9565938), (19131876, 28697814)]
size_hanoiext = [(4 * 3^(g - 1), 2 * 3^g) for g in 1:15]

# [(35, 100), (335, 1000), (3335, 10000), (33335, 100000), (333335, 1000000), (3333335, 10000000), (33333335, 100000000), (333333335, 1000000000)]
size_corona3 = [((10^(g + 1) + 5) รท 3, 10^(g + 1)) for g in 1:8]

# [(8, 18), (20, 54), (56, 162), (164, 486), (488, 1458), (1460, 4374), (4376, 13122), (13124, 39366), (39368, 118098), (118100, 354294), (354296, 1062882), (1062884, 3188646), (3188648, 9565938), (9565940, 28697814), (28697816, 86093442)]
size_apollo = [(2 * 3^g + 2, 6 * 3^g) for g in 1:15]

const g = loadApollo(5)
@show size(g)
